{% extends 'base.html.twig' %}

{% block title %}VirtualVibes : {{ rubrik.name }}{% endblock %}

{% block body %}


{# Block 1 #}

<div class="container-fluid bgall">
    <div class="container ma-rubrik">
        <div class="row align-items-center">
            <div class="col-md-12 mt-5">
                <div class="row">
                    <div class="col-md-12 bgrubrikname paddingRB">
                        <h5 class="rubriknameRB txtjs">{{ rubrik.name }}</h5>
                        <span class="textRBname">L'univers du gaming dans vos mains.</span>
                    </div>
                </div>
                <div class="row">
                    {% for posts in posts %}
                        <div class="col-lg-4 mb-4 col-md-12 margintopblock1"> <!-- Colonne pour chaque article -->
                            <div class="card h-100 containerimg">
                                <a href="{{ path('show', {'slug': posts.slug, id: posts.id}) }}" class="">
                                    <img class="imagecard" src="{{ asset('divers/images/' ~ posts.image) }}" alt="image post">
                                </a>
                                <div class="card-body test">
                                    <div class="row">
                                        <div class="col-lg-3 col-md-3">
                                            <p class="rubriknamePOST">{{ posts.rubrik.name }}</p>
                                        </div>
                                        <div class="col-md-3"></div>
                                        <div class="col-md-3"></div>
                                        <div class="col-md-3"></div>
                                    </div>
                                    <a href="{{ path('show', {'slug': posts.slug, id: posts.id}) }}" class="textnone texttitle">
                                        <h5 class="card-title">{{ posts.title }}</h5>
                                    </a>
                                    <a href="{{ path('show', {'slug': posts.slug, id: posts.id}) }}" class="textnone textabstract">
                                        <p class="card-text abstract">
                                            {{ posts.abstract|length > 150 ? posts.abstract|slice(0, 150) ~ '...' : posts.abstract }}
                                        </p>
                                    </a>
                                    <p class="createdAtPOST"> {{ posts.createdAt|date('d M Y') }} </p>
                                </div>
                            </div>
                        </div>
                    {% endfor %}
                </div>
            </div>
        </div>
    </div>
</div>

{# Block 2 #}

<div class="container-fluid bgall">
    <div class="container">
        <div class="row align-items-center">
            <div class="col-md-12">
                <div class="row">
                    {% for posts2 in posts2 %}
                        <div class="col-lg-4 mb-4 col-md-12 mb-5"> <!-- Colonne pour chaque article -->
                            <div class="card h-100 containerimg">
                                <a href="{{ path('show', {'slug': posts2.slug, id: posts2.id}) }}" class="">
                                    <img class="imagecard" src="{{ asset('divers/images/' ~ posts2.image) }}" alt="image post">
                                </a>
                                <div class="card-body test">
                                    <div class="row">
                                        <div class="col-lg-3 col-md-3">
                                            <p class="rubriknamePOST">{{ posts2.rubrik.name }}</p>
                                        </div>
                                        <div class="col-md-3"></div>
                                        <div class="col-md-3"></div>
                                        <div class="col-md-3"></div>
                                    </div>
                                    <a href="{{ path('show', {'slug': posts2.slug, id: posts2.id}) }}" class="textnone texttitle">
                                        <h5 class="card-title">{{posts2.title}}</h5>
                                    </a>
                                    <a href="{{ path('show', {'slug': posts2.slug, id: posts2.id}) }}" class="textnone textabstract">
                                        <p class="card-text">
                                            {{ posts2.abstract|length > 150 ? posts2.abstract|slice(0, 150) ~ '...' : posts2.abstract }}
                                        </p>
                                    </a>
                                    <p class="createdAtPOST"> {{ posts2.createdAt|date('d M Y') }} </p>
                                </div>
                            </div>
                        </div>
                    {% endfor %}
                </div>
            </div>
        </div>
    </div>
</div>

<script>
// Fonction pour initialiser l'animation
function initAnimation() {
    var textWrapper = document.querySelector('.txtjs');
    if (textWrapper) {
        textWrapper.innerHTML = textWrapper.textContent.replace(/\S/g, "<span class='letter'>$&</span>");

        // Animation sans boucle qui maintient le texte visible après
        anime.timeline({loop: false}) // Pas de boucle
            .add({
                targets: '.txtjs .letter',
                opacity: [0, 1],
                easing: "easeInOutQuad",
                duration: 2250,
                delay: (el, i) => 150 * (i + 1)
            })
            .add({
                targets: '.txtjs .letter',
                opacity: 1,  // Maintenir l'opacité à 1
                duration: 1000,
                easing: "easeOutExpo"
            });
    }
}

// Réinitialiser les événements au chargement dynamique de contenu
document.querySelectorAll('.rubrik-link').forEach(link => {
    link.addEventListener('click', function(e) {
        e.preventDefault();
        const url = this.href;

        fetch(url)
            .then(response => response.text())
            .then(html => {
                document.querySelector('.container').innerHTML = html;

                // Réattacher les écouteurs d'événements et relancer l'animation
                initAnimation();
            })
            .catch(error => console.warn('Erreur lors du chargement du contenu', error));
    });
});

// Lancer l'animation au chargement initial
initAnimation();

</script>



{% endblock %}